{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport Card from \"./Card.vue\";\nexport default {\n  name: \"chart-card\",\n  components: {\n    Card: Card\n  },\n  props: {\n    footerText: {\n      type: String,\n      default: \"\"\n    },\n    title: {\n      type: String,\n      default: \"\"\n    },\n    subTitle: {\n      type: String,\n      default: \"\"\n    },\n    chartType: {\n      type: String,\n      default: \"Line\" // Line | Pie | Bar\n    },\n\n    chartOptions: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    chartData: {\n      type: Object,\n      default: function _default() {\n        return {\n          labels: [],\n          series: []\n        };\n      }\n    }\n  },\n  data: function data() {\n    return {\n      chartId: \"no-id\"\n    };\n  },\n  methods: {\n    /***\r\n     * Initializes the chart by merging the chart options sent via props and the default chart options\r\n     */\n    initChart: function initChart(Chartist) {\n      var chartIdQuery = \"#\".concat(this.chartId);\n      Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions);\n    },\n    /***\r\n     * Assigns a random id to the chart\r\n     */\n    updateChartId: function updateChartId() {\n      var currentTime = new Date().getTime().toString();\n      var randomInt = this.getRandomInt(0, currentTime);\n      this.chartId = \"div_\".concat(randomInt);\n    },\n    getRandomInt: function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    this.updateChartId();\n    import(\"chartist\").then(function (Chartist) {\n      var ChartistLib = Chartist.default || Chartist;\n      _this.$nextTick(function () {\n        _this.initChart(ChartistLib);\n      });\n    });\n  }\n};","map":{"version":3,"names":["Card","name","components","props","footerText","type","String","default","title","subTitle","chartType","chartOptions","Object","_default","chartData","labels","series","data","chartId","methods","initChart","Chartist","chartIdQuery","concat","updateChartId","currentTime","Date","getTime","toString","randomInt","getRandomInt","min","max","Math","floor","random","mounted","_this","then","ChartistLib","$nextTick"],"sources":["src/components/Cards/ChartCard.vue"],"sourcesContent":["<template>\r\n  <card>\r\n    <template slot=\"header\">\r\n      <h4 v-if=\"$slots.title || title\" class=\"card-title\">\r\n        <slot name=\"title\">\r\n          {{ title }}\r\n        </slot>\r\n      </h4>\r\n      <p class=\"card-category\">\r\n        <slot name=\"subTitle\">\r\n          {{ subTitle }}\r\n        </slot>\r\n      </p>\r\n    </template>\r\n    <div>\r\n      <div :id=\"chartId\" class=\"ct-chart\"></div>\r\n      <div class=\"footer\">\r\n        <div class=\"chart-legend\">\r\n          <slot name=\"legend\"></slot>\r\n        </div>\r\n        <hr />\r\n        <div class=\"stats\">\r\n          <slot name=\"footer\"></slot>\r\n        </div>\r\n        <div class=\"pull-right\"></div>\r\n      </div>\r\n    </div>\r\n  </card>\r\n</template>\r\n<script>\r\nimport Card from \"./Card.vue\";\r\nexport default {\r\n  name: \"chart-card\",\r\n  components: {\r\n    Card,\r\n  },\r\n  props: {\r\n    footerText: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    title: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    subTitle: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n    chartType: {\r\n      type: String,\r\n      default: \"Line\", // Line | Pie | Bar\r\n    },\r\n    chartOptions: {\r\n      type: Object,\r\n      default: () => {\r\n        return {};\r\n      },\r\n    },\r\n    chartData: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          labels: [],\r\n          series: [],\r\n        };\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      chartId: \"no-id\",\r\n    };\r\n  },\r\n  methods: {\r\n    /***\r\n     * Initializes the chart by merging the chart options sent via props and the default chart options\r\n     */\r\n    initChart(Chartist) {\r\n      const chartIdQuery = `#${this.chartId}`;\r\n      Chartist[this.chartType](chartIdQuery, this.chartData, this.chartOptions);\r\n    },\r\n    /***\r\n     * Assigns a random id to the chart\r\n     */\r\n    updateChartId() {\r\n      const currentTime = new Date().getTime().toString();\r\n      const randomInt = this.getRandomInt(0, currentTime);\r\n      this.chartId = `div_${randomInt}`;\r\n    },\r\n    getRandomInt(min, max) {\r\n      return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.updateChartId();\r\n    import(\"chartist\").then((Chartist) => {\r\n      let ChartistLib = Chartist.default || Chartist;\r\n      this.$nextTick(() => {\r\n        this.initChart(ChartistLib);\r\n      });\r\n    });\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":";;;;AA8BA,OAAAA,IAAA;AACA;EACAC,IAAA;EACAC,UAAA;IACAF,IAAA,EAAAA;EACA;EACAG,KAAA;IACAC,UAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,KAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,QAAA;MACAJ,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAG,SAAA;MACAL,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;;IACAI,YAAA;MACAN,IAAA,EAAAO,MAAA;MACAL,OAAA,WAAAM,SAAA;QACA;MACA;IACA;IACAC,SAAA;MACAT,IAAA,EAAAO,MAAA;MACAL,OAAA,WAAAM,SAAA;QACA;UACAE,MAAA;UACAC,MAAA;QACA;MACA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,OAAA;IACA;AACA;AACA;IACAC,SAAA,WAAAA,UAAAC,QAAA;MACA,IAAAC,YAAA,OAAAC,MAAA,MAAAL,OAAA;MACAG,QAAA,MAAAX,SAAA,EAAAY,YAAA,OAAAR,SAAA,OAAAH,YAAA;IACA;IACA;AACA;AACA;IACAa,aAAA,WAAAA,cAAA;MACA,IAAAC,WAAA,OAAAC,IAAA,GAAAC,OAAA,GAAAC,QAAA;MACA,IAAAC,SAAA,QAAAC,YAAA,IAAAL,WAAA;MACA,KAAAP,OAAA,UAAAK,MAAA,CAAAM,SAAA;IACA;IACAC,YAAA,WAAAA,aAAAC,GAAA,EAAAC,GAAA;MACA,OAAAC,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA,MAAAH,GAAA,GAAAD,GAAA,SAAAA,GAAA;IACA;EACA;EACAK,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACA,KAAAb,aAAA;IACA,mBAAAc,IAAA,WAAAjB,QAAA;MACA,IAAAkB,WAAA,GAAAlB,QAAA,CAAAd,OAAA,IAAAc,QAAA;MACAgB,KAAA,CAAAG,SAAA;QACAH,KAAA,CAAAjB,SAAA,CAAAmB,WAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}