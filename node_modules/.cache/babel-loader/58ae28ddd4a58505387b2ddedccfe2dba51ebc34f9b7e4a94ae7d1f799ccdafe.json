{"ast":null,"code":"import { StatsCard, ChartCard } from \"@/components/index\";\nimport Chartist from \"chartist\";\nexport default {\n  mounted: function mounted() {\n    this.$toast.success(\"Welcome to DataPower\");\n  },\n  components: {\n    StatsCard: StatsCard,\n    ChartCard: ChartCard\n  },\n  /**\r\n   * Chart data used to render stats, charts. Should be replaced with server data\r\n   */\n  data: function data() {\n    return {\n      statsCards: [{\n        type: \"warning\",\n        icon: \"ti-server\",\n        title: \"Capacity\",\n        value: \"105GB\",\n        footerText: \"Updated now\",\n        footerIcon: \"ti-reload\"\n      }, {\n        type: \"success\",\n        icon: \"ti-wallet\",\n        title: \"Revenue\",\n        value: \"$1,345\",\n        footerText: \"Last day\",\n        footerIcon: \"ti-calendar\"\n      }, {\n        type: \"danger\",\n        icon: \"ti-pulse\",\n        title: \"Errors\",\n        value: \"23\",\n        footerText: \"In the last hour\",\n        footerIcon: \"ti-timer\"\n      }, {\n        type: \"info\",\n        icon: \"ti-twitter-alt\",\n        title: \"Followers\",\n        value: \"+45\",\n        footerText: \"Updated now\",\n        footerIcon: \"ti-reload\"\n      }],\n      usersChart: {\n        data: {\n          labels: [\"9:00AM\", \"12:00AM\", \"3:00PM\", \"6:00PM\", \"9:00PM\", \"12:00PM\", \"3:00AM\", \"6:00AM\"],\n          series: [[287, 385, 490, 562, 594, 626, 698, 895, 952], [67, 152, 193, 240, 387, 435, 535, 642, 744], [23, 113, 67, 108, 190, 239, 307, 410, 410]]\n        },\n        options: {\n          low: 0,\n          high: 1000,\n          showArea: true,\n          height: \"245px\",\n          axisX: {\n            showGrid: false\n          },\n          lineSmooth: Chartist.Interpolation.simple({\n            divisor: 3\n          }),\n          showLine: true,\n          showPoint: false\n        }\n      },\n      activityChart: {\n        data: {\n          labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"Mai\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n          series: [[542, 543, 520, 680, 653, 753, 326, 434, 568, 610, 756, 895], [230, 293, 380, 480, 503, 553, 600, 664, 698, 710, 736, 795]]\n        },\n        options: {\n          seriesBarDistance: 10,\n          axisX: {\n            showGrid: false\n          },\n          height: \"245px\"\n        }\n      },\n      preferencesChart: {\n        data: {\n          labels: [\"62%\", \"32%\", \"6%\"],\n          series: [62, 32, 6]\n        },\n        options: {}\n      }\n    };\n  }\n};","map":{"version":3,"names":["StatsCard","ChartCard","Chartist","mounted","$toast","success","components","data","statsCards","type","icon","title","value","footerText","footerIcon","usersChart","labels","series","options","low","high","showArea","height","axisX","showGrid","lineSmooth","Interpolation","simple","divisor","showLine","showPoint","activityChart","seriesBarDistance","preferencesChart"],"sources":["src/pages/Dashboard.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!--Stats cards-->\r\n    <div class=\"row\">\r\n      <div\r\n        class=\"col-md-6 col-xl-3\"\r\n        v-for=\"stats in statsCards\"\r\n        :key=\"stats.title\"\r\n      >\r\n        <stats-card>\r\n          <div\r\n            class=\"icon-big text-center\"\r\n            :class=\"`icon-${stats.type}`\"\r\n            slot=\"header\"\r\n          >\r\n            <i :class=\"stats.icon\"></i>\r\n          </div>\r\n          <div class=\"numbers\" slot=\"content\">\r\n            <p>{{ stats.title }}</p>\r\n            {{ stats.value }}\r\n          </div>\r\n          <div class=\"stats\" slot=\"footer\">\r\n            <i :class=\"stats.footerIcon\"></i> {{ stats.footerText }}\r\n          </div>\r\n        </stats-card>\r\n      </div>\r\n    </div>\r\n\r\n    <!--Charts-->\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <chart-card\r\n          title=\"Users behavior\"\r\n          sub-title=\"24 Hours performance\"\r\n          :chart-data=\"usersChart.data\"\r\n          :chart-options=\"usersChart.options\"\r\n        >\r\n          <span slot=\"footer\">\r\n            <i class=\"ti-reload\"></i> Updated 3 minutes ago\r\n          </span>\r\n          <div slot=\"legend\">\r\n            <i class=\"fa fa-circle text-info\"></i> Open\r\n            <i class=\"fa fa-circle text-danger\"></i> Click\r\n            <i class=\"fa fa-circle text-warning\"></i> Click Second Time\r\n          </div>\r\n        </chart-card>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <chart-card\r\n          title=\"Email Statistics\"\r\n          sub-title=\"Last campaign performance\"\r\n          :chart-data=\"preferencesChart.data\"\r\n          chart-type=\"Pie\"\r\n        >\r\n          <span slot=\"footer\">\r\n            <i class=\"ti-timer\"></i> Campaign set 2 days ago</span\r\n          >\r\n          <div slot=\"legend\">\r\n            <i class=\"fa fa-circle text-info\"></i> Open\r\n            <i class=\"fa fa-circle text-danger\"></i> Bounce\r\n            <i class=\"fa fa-circle text-warning\"></i> Unsubscribe\r\n          </div>\r\n        </chart-card>\r\n      </div>\r\n\r\n      <div class=\"col-md-6 col-12\">\r\n        <chart-card\r\n          title=\"2015 Sales\"\r\n          sub-title=\"All products including Taxes\"\r\n          :chart-data=\"activityChart.data\"\r\n          :chart-options=\"activityChart.options\"\r\n        >\r\n          <span slot=\"footer\">\r\n            <i class=\"ti-check\"></i> Data information certified\r\n          </span>\r\n          <div slot=\"legend\">\r\n            <i class=\"fa fa-circle text-info\"></i> Tesla Model S\r\n            <i class=\"fa fa-circle text-warning\"></i> BMW 5 Series\r\n          </div>\r\n        </chart-card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { StatsCard, ChartCard } from \"@/components/index\";\r\nimport Chartist from \"chartist\";\r\nexport default {\r\n  mounted() {\r\n    this.$toast.success(\"Welcome to DataPower\");\r\n  },\r\n  components: {\r\n    StatsCard,\r\n    ChartCard,\r\n  },\r\n  /**\r\n   * Chart data used to render stats, charts. Should be replaced with server data\r\n   */\r\n  data() {\r\n    return {\r\n      statsCards: [\r\n        {\r\n          type: \"warning\",\r\n          icon: \"ti-server\",\r\n          title: \"Capacity\",\r\n          value: \"105GB\",\r\n          footerText: \"Updated now\",\r\n          footerIcon: \"ti-reload\",\r\n        },\r\n        {\r\n          type: \"success\",\r\n          icon: \"ti-wallet\",\r\n          title: \"Revenue\",\r\n          value: \"$1,345\",\r\n          footerText: \"Last day\",\r\n          footerIcon: \"ti-calendar\",\r\n        },\r\n        {\r\n          type: \"danger\",\r\n          icon: \"ti-pulse\",\r\n          title: \"Errors\",\r\n          value: \"23\",\r\n          footerText: \"In the last hour\",\r\n          footerIcon: \"ti-timer\",\r\n        },\r\n        {\r\n          type: \"info\",\r\n          icon: \"ti-twitter-alt\",\r\n          title: \"Followers\",\r\n          value: \"+45\",\r\n          footerText: \"Updated now\",\r\n          footerIcon: \"ti-reload\",\r\n        },\r\n      ],\r\n      usersChart: {\r\n        data: {\r\n          labels: [\r\n            \"9:00AM\",\r\n            \"12:00AM\",\r\n            \"3:00PM\",\r\n            \"6:00PM\",\r\n            \"9:00PM\",\r\n            \"12:00PM\",\r\n            \"3:00AM\",\r\n            \"6:00AM\",\r\n          ],\r\n          series: [\r\n            [287, 385, 490, 562, 594, 626, 698, 895, 952],\r\n            [67, 152, 193, 240, 387, 435, 535, 642, 744],\r\n            [23, 113, 67, 108, 190, 239, 307, 410, 410],\r\n          ],\r\n        },\r\n        options: {\r\n          low: 0,\r\n          high: 1000,\r\n          showArea: true,\r\n          height: \"245px\",\r\n          axisX: {\r\n            showGrid: false,\r\n          },\r\n          lineSmooth: Chartist.Interpolation.simple({\r\n            divisor: 3,\r\n          }),\r\n          showLine: true,\r\n          showPoint: false,\r\n        },\r\n      },\r\n      activityChart: {\r\n        data: {\r\n          labels: [\r\n            \"Jan\",\r\n            \"Feb\",\r\n            \"Mar\",\r\n            \"Apr\",\r\n            \"Mai\",\r\n            \"Jun\",\r\n            \"Jul\",\r\n            \"Aug\",\r\n            \"Sep\",\r\n            \"Oct\",\r\n            \"Nov\",\r\n            \"Dec\",\r\n          ],\r\n          series: [\r\n            [542, 543, 520, 680, 653, 753, 326, 434, 568, 610, 756, 895],\r\n            [230, 293, 380, 480, 503, 553, 600, 664, 698, 710, 736, 795],\r\n          ],\r\n        },\r\n        options: {\r\n          seriesBarDistance: 10,\r\n          axisX: {\r\n            showGrid: false,\r\n          },\r\n          height: \"245px\",\r\n        },\r\n      },\r\n      preferencesChart: {\r\n        data: {\r\n          labels: [\"62%\", \"32%\", \"6%\"],\r\n          series: [62, 32, 6],\r\n        },\r\n        options: {},\r\n      },\r\n    };\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":"AAsFA,SAAAA,SAAA,EAAAC,SAAA;AACA,OAAAC,QAAA;AACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,MAAA,CAAAC,OAAA;EACA;EACAC,UAAA;IACAN,SAAA,EAAAA,SAAA;IACAC,SAAA,EAAAA;EACA;EACA;AACA;AACA;EACAM,IAAA,WAAAA,KAAA;IACA;MACAC,UAAA,GACA;QACAC,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,UAAA;QACAC,UAAA;MACA,GACA;QACAL,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,UAAA;QACAC,UAAA;MACA,GACA;QACAL,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,UAAA;QACAC,UAAA;MACA,GACA;QACAL,IAAA;QACAC,IAAA;QACAC,KAAA;QACAC,KAAA;QACAC,UAAA;QACAC,UAAA;MACA,EACA;MACAC,UAAA;QACAR,IAAA;UACAS,MAAA,GACA,UACA,WACA,UACA,UACA,UACA,WACA,UACA,SACA;UACAC,MAAA,GACA,+CACA,8CACA;QAEA;QACAC,OAAA;UACAC,GAAA;UACAC,IAAA;UACAC,QAAA;UACAC,MAAA;UACAC,KAAA;YACAC,QAAA;UACA;UACAC,UAAA,EAAAvB,QAAA,CAAAwB,aAAA,CAAAC,MAAA;YACAC,OAAA;UACA;UACAC,QAAA;UACAC,SAAA;QACA;MACA;MACAC,aAAA;QACAxB,IAAA;UACAS,MAAA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA;UACAC,MAAA,GACA,8DACA;QAEA;QACAC,OAAA;UACAc,iBAAA;UACAT,KAAA;YACAC,QAAA;UACA;UACAF,MAAA;QACA;MACA;MACAW,gBAAA;QACA1B,IAAA;UACAS,MAAA;UACAC,MAAA;QACA;QACAC,OAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}