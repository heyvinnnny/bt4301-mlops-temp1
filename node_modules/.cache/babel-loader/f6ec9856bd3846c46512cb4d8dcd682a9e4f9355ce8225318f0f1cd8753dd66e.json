{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/User/Documents/GitHub/bt4301-mlops-temp1/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/User/Documents/GitHub/bt4301-mlops-temp1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport firebase from \"@/uifire.js\";\nimport db from \"@/main.js\";\nimport \"firebase/compat/auth\";\nimport * as firebaseui from \"firebaseui\";\nimport \"firebaseui/dist/firebaseui.css\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { doc, getDocs, getFirestore, collection } from \"firebase/firestore\";\n\n//https://softauthor.com/firebase-vuejs-role-based-authentication-authorization/\n\n// export default {\n//   data() {\n//     return {\n//       email: '',\n//       password: '',\n//       access: ''\n//     }\n//   },\n//   methods: {\n//     async login() {\n//       try {\n//         const db = getFirestore(firebase);\n//         const querySnapshot = await getDocs(collection(db, 'login'));\n//         querySnapshot.forEach((doc) => {\n//           if (doc.data().email === this.email && doc.data().password === this.password) {\n//             this.access = doc.data().access;\n//           }\n//         });\n//         if (this.access === 'Admin') {\n//           this.$router.push('/dashboard')\n//         } else if (this.access === 'Executive') {\n//           this.$router.push('/dashboard')\n//         } else {\n//           this.$router.push('/dashboard')\n//         }\n//       } catch (error) {\n//         this.$toast.error(error.message);\n//       }\n//     }\n//   }\n// }\n\n// This method keeps having timeout, cannot connect to Firebase. Need to evaluate\n// export default {\n//   data() {\n//     return {\n//       email: '',\n//       password: '',\n//       error: null\n//     }\n//   },\n//   methods: {\n//     async login() {\n//       try {\n//         const auth = getAuth();\n//         const userCredential = await signInWithEmailAndPassword(auth, this.email, this.password);\n//         const user = userCredential.user;\n//         const db = getFirestore();\n//         const userData = await getDoc(doc(db, 'users', user.uid));\n//         const access = userData.get('access')\n//         // Redirect the user to the appropriate dashboard based on their access level\n//         if (access === 'Admin') {\n//           this.$router.push('/dashboard')\n//         } else if (access === 'Executive') {\n//           this.$router.push('/dashboard')\n//         } else {\n//           this.$router.push('/dashboard')\n//         }\n//       } catch (error) {\n//         this.$toast.error(error.message);\n//       }\n//     }\n//   }\n// }\n\n//authentication only version without any access controls\nexport default {\n  data: function data() {\n    return {\n      email: '',\n      password: '',\n      error: null\n    };\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return firebase.auth().signInWithEmailAndPassword(_this.email, _this.password);\n            case 3:\n              _this.$emit('authenticated');\n              _this.$toast.success(\"Welcome to DataPower\");\n              _this.$router.push('/dashboard');\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              _this.$toast.error(_context.t0.message);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["firebase","db","firebaseui","getAuth","signInWithEmailAndPassword","doc","getDocs","getFirestore","collection","data","email","password","error","methods","login","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","auth","$emit","$toast","success","$router","push","t0","message","stop"],"sources":["src/components/Cards/LoginCard.vue"],"sourcesContent":["<template>\r\n  <div class=\"login-card\">\r\n    <h2>Login</h2>\r\n    <form @submit.prevent=\"login\">\r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input type=\"email\" id=\"email\" v-model=\"email\" required>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" id=\"password\" v-model=\"password\" required>\r\n      </div>\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n    <div v-if=\"error\" class=\"error-message\">{{ error }}</div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport firebase from \"@/uifire.js\";\r\nimport db from \"@/main.js\";\r\nimport \"firebase/compat/auth\";\r\nimport * as firebaseui from \"firebaseui\";\r\nimport \"firebaseui/dist/firebaseui.css\";\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { doc, getDocs, getFirestore, collection } from \"firebase/firestore\";\r\n\r\n//https://softauthor.com/firebase-vuejs-role-based-authentication-authorization/\r\n\r\n// export default {\r\n//   data() {\r\n//     return {\r\n//       email: '',\r\n//       password: '',\r\n//       access: ''\r\n//     }\r\n//   },\r\n//   methods: {\r\n//     async login() {\r\n//       try {\r\n//         const db = getFirestore(firebase);\r\n//         const querySnapshot = await getDocs(collection(db, 'login'));\r\n//         querySnapshot.forEach((doc) => {\r\n//           if (doc.data().email === this.email && doc.data().password === this.password) {\r\n//             this.access = doc.data().access;\r\n//           }\r\n//         });\r\n//         if (this.access === 'Admin') {\r\n//           this.$router.push('/dashboard')\r\n//         } else if (this.access === 'Executive') {\r\n//           this.$router.push('/dashboard')\r\n//         } else {\r\n//           this.$router.push('/dashboard')\r\n//         }\r\n//       } catch (error) {\r\n//         this.$toast.error(error.message);\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n// This method keeps having timeout, cannot connect to Firebase. Need to evaluate\r\n// export default {\r\n//   data() {\r\n//     return {\r\n//       email: '',\r\n//       password: '',\r\n//       error: null\r\n//     }\r\n//   },\r\n//   methods: {\r\n//     async login() {\r\n//       try {\r\n//         const auth = getAuth();\r\n//         const userCredential = await signInWithEmailAndPassword(auth, this.email, this.password);\r\n//         const user = userCredential.user;\r\n//         const db = getFirestore();\r\n//         const userData = await getDoc(doc(db, 'users', user.uid));\r\n//         const access = userData.get('access')\r\n//         // Redirect the user to the appropriate dashboard based on their access level\r\n//         if (access === 'Admin') {\r\n//           this.$router.push('/dashboard')\r\n//         } else if (access === 'Executive') {\r\n//           this.$router.push('/dashboard')\r\n//         } else {\r\n//           this.$router.push('/dashboard')\r\n//         }\r\n//       } catch (error) {\r\n//         this.$toast.error(error.message);\r\n//       }\r\n//     }\r\n//   }\r\n// }\r\n\r\n//authentication only version without any access controls\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      error: null\r\n    }\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        await firebase.auth().signInWithEmailAndPassword(this.email, this.password)\r\n        this.$emit('authenticated')\r\n        this.$toast.success(\"Welcome to DataPower\");\r\n        this.$router.push('/dashboard')\r\n      } catch (error) {\r\n        this.$toast.error(error.message);\r\n      }\r\n    }\r\n  }\r\n}\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .login-card {\r\n  border: 1px solid #ccc;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n}\r\n\r\ninput[type=\"email\"],\r\ninput[type=\"password\"] {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: 1px solid #ccc;\r\n}\r\n\r\nbutton[type=\"submit\"] {\r\n  display: block;\r\n  background-color: #3490dc;\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  cursor: pointer;\r\n  width: 100%;\r\n}\r\n\r\n.error-message {\r\n  color: red;\r\n  margin-top: 10px;\r\n}\r\n  </style>\r\n  "],"mappings":";;;AAmBA,OAAAA,QAAA;AACA,OAAAC,EAAA;AACA;AACA,YAAAC,UAAA;AACA;AACA,SAAAC,OAAA,EAAAC,0BAAA;AACA,SAAAC,GAAA,EAAAC,OAAA,EAAAC,YAAA,EAAAC,UAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,KAAA,WAAAA,MAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAEAxB,QAAA,CAAAyB,IAAA,GAAArB,0BAAA,CAAAW,KAAA,CAAAL,KAAA,EAAAK,KAAA,CAAAJ,QAAA;YAAA;cACAI,KAAA,CAAAW,KAAA;cACAX,KAAA,CAAAY,MAAA,CAAAC,OAAA;cACAb,KAAA,CAAAc,OAAA,CAAAC,IAAA;cAAAR,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;cAEAP,KAAA,CAAAY,MAAA,CAAAf,KAAA,CAAAU,QAAA,CAAAS,EAAA,CAAAC,OAAA;YAAA;YAAA;cAAA,OAAAV,QAAA,CAAAW,IAAA;UAAA;QAAA,GAAAd,OAAA;MAAA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}