{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport MovingArrow from \"./MovingArrow.vue\";\nimport SidebarLink from \"./SidebarLink\";\nexport default {\n  props: {\n    title: {\n      type: String,\n      default: \"Paper Dashboard\"\n    },\n    backgroundColor: {\n      type: String,\n      default: \"black\",\n      validator: function validator(value) {\n        var acceptedValues = [\"white\", \"black\", \"darkblue\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    activeColor: {\n      type: String,\n      default: \"success\",\n      validator: function validator(value) {\n        var acceptedValues = [\"primary\", \"info\", \"success\", \"warning\", \"danger\"];\n        return acceptedValues.indexOf(value) !== -1;\n      }\n    },\n    sidebarLinks: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    autoClose: {\n      type: Boolean,\n      default: true\n    }\n  },\n  provide: function provide() {\n    return {\n      autoClose: this.autoClose,\n      addLink: this.addLink,\n      removeLink: this.removeLink\n    };\n  },\n  components: {\n    MovingArrow: MovingArrow,\n    SidebarLink: SidebarLink\n  },\n  computed: {\n    /**\r\n     * Styles to animate the arrow near the current active sidebar link\r\n     * @returns {{transform: string}}\r\n     */\n    arrowMovePx: function arrowMovePx() {\n      return this.linkHeight * this.activeLinkIndex;\n    }\n  },\n  data: function data() {\n    return {\n      linkHeight: 65,\n      activeLinkIndex: 0,\n      windowWidth: 0,\n      isWindows: false,\n      hasAutoHeight: false,\n      links: []\n    };\n  },\n  methods: {\n    findActiveLink: function findActiveLink() {\n      var _this = this;\n      this.links.forEach(function (link, index) {\n        if (link.isActive()) {\n          _this.activeLinkIndex = index;\n        }\n      });\n    },\n    addLink: function addLink(link) {\n      var index = this.$slots.links.indexOf(link.$vnode);\n      this.links.splice(index, 0, link);\n    },\n    removeLink: function removeLink(link) {\n      var index = this.links.indexOf(link);\n      if (index > -1) {\n        this.links.splice(index, 1);\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.$watch(\"$route\", this.findActiveLink, {\n      immediate: true\n    });\n  }\n};","map":{"version":3,"names":["MovingArrow","SidebarLink","props","title","type","String","default","backgroundColor","validator","value","acceptedValues","indexOf","activeColor","sidebarLinks","Array","_default","autoClose","Boolean","provide","addLink","removeLink","components","computed","arrowMovePx","linkHeight","activeLinkIndex","data","windowWidth","isWindows","hasAutoHeight","links","methods","findActiveLink","_this","forEach","link","index","isActive","$slots","$vnode","splice","mounted","$watch","immediate"],"sources":["src/components/SidebarPlugin/SideBar.vue"],"sourcesContent":["<template>\r\n  <div\r\n    class=\"sidebar\"\r\n    :data-background-color=\"backgroundColor\"\r\n    :data-active-color=\"activeColor\"\r\n  >\r\n    <!--\r\n            Tip 1: you can change the color of the sidebar's background using: data-background-color=\"white | black | darkblue\"\r\n            Tip 2: you can change the color of the active button using the data-active-color=\"primary | info | success | warning | danger\"\r\n        -->\r\n    <!-- -->\r\n    <div class=\"sidebar-wrapper\" id=\"style-3\">\r\n      <div class=\"logo\">\r\n        <a href=\"#\" class=\"simple-text\">\r\n          <div class=\"logo-img\">\r\n            <img src=\"@/assets/img/vue-logo.png\" alt=\"\" />\r\n          </div>\r\n          {{ title }}\r\n        </a>\r\n      </div>\r\n      <slot> </slot>\r\n      <ul class=\"nav\">\r\n        <!--By default vue-router adds an active class to each route link. This way the links are colored when clicked-->\r\n        <slot name=\"links\">\r\n          <sidebar-link\r\n            v-for=\"(link, index) in sidebarLinks\"\r\n            :key=\"index\"\r\n            :to=\"link.path\"\r\n            :name=\"link.name\"\r\n            :icon=\"link.icon\"\r\n          >\r\n          </sidebar-link>\r\n        </slot>\r\n      </ul>\r\n      <moving-arrow :move-y=\"arrowMovePx\"> </moving-arrow>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport MovingArrow from \"./MovingArrow.vue\";\r\nimport SidebarLink from \"./SidebarLink\";\r\nexport default {\r\n  props: {\r\n    title: {\r\n      type: String,\r\n      default: \"Paper Dashboard\",\r\n    },\r\n    backgroundColor: {\r\n      type: String,\r\n      default: \"black\",\r\n      validator: (value) => {\r\n        let acceptedValues = [\"white\", \"black\", \"darkblue\"];\r\n        return acceptedValues.indexOf(value) !== -1;\r\n      },\r\n    },\r\n    activeColor: {\r\n      type: String,\r\n      default: \"success\",\r\n      validator: (value) => {\r\n        let acceptedValues = [\r\n          \"primary\",\r\n          \"info\",\r\n          \"success\",\r\n          \"warning\",\r\n          \"danger\",\r\n        ];\r\n        return acceptedValues.indexOf(value) !== -1;\r\n      },\r\n    },\r\n    sidebarLinks: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    autoClose: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n  },\r\n  provide() {\r\n    return {\r\n      autoClose: this.autoClose,\r\n      addLink: this.addLink,\r\n      removeLink: this.removeLink,\r\n    };\r\n  },\r\n  components: {\r\n    MovingArrow,\r\n    SidebarLink,\r\n  },\r\n  computed: {\r\n    /**\r\n     * Styles to animate the arrow near the current active sidebar link\r\n     * @returns {{transform: string}}\r\n     */\r\n    arrowMovePx() {\r\n      return this.linkHeight * this.activeLinkIndex;\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      linkHeight: 65,\r\n      activeLinkIndex: 0,\r\n      windowWidth: 0,\r\n      isWindows: false,\r\n      hasAutoHeight: false,\r\n      links: [],\r\n    };\r\n  },\r\n  methods: {\r\n    findActiveLink() {\r\n      this.links.forEach((link, index) => {\r\n        if (link.isActive()) {\r\n          this.activeLinkIndex = index;\r\n        }\r\n      });\r\n    },\r\n    addLink(link) {\r\n      const index = this.$slots.links.indexOf(link.$vnode);\r\n      this.links.splice(index, 0, link);\r\n    },\r\n    removeLink(link) {\r\n      const index = this.links.indexOf(link);\r\n      if (index > -1) {\r\n        this.links.splice(index, 1);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    this.$watch(\"$route\", this.findActiveLink, {\r\n      immediate: true,\r\n    });\r\n  },\r\n};\r\n</script>\r\n<style></style>\r\n"],"mappings":";;;AAuCA,OAAAA,WAAA;AACA,OAAAC,WAAA;AACA;EACAC,KAAA;IACAC,KAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,eAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAE,SAAA,WAAAA,UAAAC,KAAA;QACA,IAAAC,cAAA;QACA,OAAAA,cAAA,CAAAC,OAAA,CAAAF,KAAA;MACA;IACA;IACAG,WAAA;MACAR,IAAA,EAAAC,MAAA;MACAC,OAAA;MACAE,SAAA,WAAAA,UAAAC,KAAA;QACA,IAAAC,cAAA,IACA,WACA,QACA,WACA,WACA,SACA;QACA,OAAAA,cAAA,CAAAC,OAAA,CAAAF,KAAA;MACA;IACA;IACAI,YAAA;MACAT,IAAA,EAAAU,KAAA;MACAR,OAAA,WAAAS,SAAA;QAAA;MAAA;IACA;IACAC,SAAA;MACAZ,IAAA,EAAAa,OAAA;MACAX,OAAA;IACA;EACA;EACAY,OAAA,WAAAA,QAAA;IACA;MACAF,SAAA,OAAAA,SAAA;MACAG,OAAA,OAAAA,OAAA;MACAC,UAAA,OAAAA;IACA;EACA;EACAC,UAAA;IACArB,WAAA,EAAAA,WAAA;IACAC,WAAA,EAAAA;EACA;EACAqB,QAAA;IACA;AACA;AACA;AACA;IACAC,WAAA,WAAAA,YAAA;MACA,YAAAC,UAAA,QAAAC,eAAA;IACA;EACA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAF,UAAA;MACAC,eAAA;MACAE,WAAA;MACAC,SAAA;MACAC,aAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACAC,cAAA,WAAAA,eAAA;MAAA,IAAAC,KAAA;MACA,KAAAH,KAAA,CAAAI,OAAA,WAAAC,IAAA,EAAAC,KAAA;QACA,IAAAD,IAAA,CAAAE,QAAA;UACAJ,KAAA,CAAAR,eAAA,GAAAW,KAAA;QACA;MACA;IACA;IACAjB,OAAA,WAAAA,QAAAgB,IAAA;MACA,IAAAC,KAAA,QAAAE,MAAA,CAAAR,KAAA,CAAAnB,OAAA,CAAAwB,IAAA,CAAAI,MAAA;MACA,KAAAT,KAAA,CAAAU,MAAA,CAAAJ,KAAA,KAAAD,IAAA;IACA;IACAf,UAAA,WAAAA,WAAAe,IAAA;MACA,IAAAC,KAAA,QAAAN,KAAA,CAAAnB,OAAA,CAAAwB,IAAA;MACA,IAAAC,KAAA;QACA,KAAAN,KAAA,CAAAU,MAAA,CAAAJ,KAAA;MACA;IACA;EACA;EACAK,OAAA,WAAAA,QAAA;IACA,KAAAC,MAAA,gBAAAV,cAAA;MACAW,SAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}