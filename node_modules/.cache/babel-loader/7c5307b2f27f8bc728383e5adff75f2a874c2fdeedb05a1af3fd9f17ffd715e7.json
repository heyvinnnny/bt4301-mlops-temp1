{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/kevin/OneDrive/Desktop/NUS/Y3S2/BT4301/Project/bt4301-mlops-temp1/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/kevin/OneDrive/Desktop/NUS/Y3S2/BT4301/Project/bt4301-mlops-temp1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport \"firebase/compat/auth\";\nimport \"firebaseui/dist/firebaseui.css\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { doc, getDocs, addDoc, getFirestore, collection } from \"firebase/firestore\";\n\n//able to input user details into firebase but there is some issues with validation (e.g. no message prompt)\nexport default {\n  setup: function setup() {\n    var _this = this;\n    var name = ref('');\n    var email = ref('');\n    var password = ref('');\n    var confirmPassword = ref('');\n    var access = ref('');\n    var register = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var auth, db, userCredential, user;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(password.value !== confirmPassword.value)) {\n                _context.next = 3;\n                break;\n              }\n              alert('Passwords do not match');\n              return _context.abrupt(\"return\");\n            case 3:\n              _context.prev = 3;\n              auth = getAuth();\n              db = getFirestore();\n              _context.next = 8;\n              return createUserWithEmailAndPassword(auth, email.value, password.value);\n            case 8:\n              userCredential = _context.sent;\n              user = userCredential.user;\n              _this.$emit('authenticated');\n              _this.$toast.success(\"Welcome to DataPower\");\n              _this.$router.push('/dashboard');\n              alert('Registration successful!');\n\n              //adding info works well (for authentication only)\n              _context.next = 16;\n              return addDoc(collection(db, 'users'), {\n                name: name.value,\n                email: email.value,\n                password: password.value,\n                access: access.value,\n                uid: user.uid\n              });\n            case 16:\n              _context.next = 21;\n              break;\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](3);\n              // error do prompt though\n              //this.$toast.error(error.message);\n              alert('Registration failed. Please try again.');\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[3, 18]]);\n      }));\n      return function register() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    return {\n      name: name,\n      email: email,\n      password: password,\n      confirmPassword: confirmPassword,\n      access: access,\n      register: register\n    };\n  }\n};","map":{"version":3,"names":["ref","getAuth","createUserWithEmailAndPassword","doc","getDocs","addDoc","getFirestore","collection","setup","_this","name","email","password","confirmPassword","access","register","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","auth","db","userCredential","user","wrap","_callee$","_context","prev","next","value","alert","abrupt","sent","$emit","$toast","success","$router","push","uid","t0","stop","apply","arguments"],"sources":["src/components/Cards/RegisterCard.vue"],"sourcesContent":["<template>\r\n    <div class=\"register-form\" id=\"app\">\r\n      <form @submit.prevent=\"register\">\r\n        <div>\r\n          <label>Name</label>\r\n          <input v-model=\"name\" type=\"text\" required />\r\n        </div>\r\n        <div>\r\n          <label>Email</label>\r\n          <input v-model=\"email\" type=\"email\" required />\r\n        </div>\r\n        <div>\r\n          <label>Password</label>\r\n          <input v-model=\"password\" type=\"password\" required />\r\n        </div>\r\n        <div>\r\n          <label>Confirm Password</label>\r\n          <input v-model=\"confirmPassword\" type=\"password\" required />\r\n        </div>\r\n        <div>\r\n          <label>Role</label>\r\n          <select v-model=\"access\" required>\r\n            <option value=\"admin\">Admin</option>\r\n            <option value=\"executive\">Executive</option>\r\n            <option value=\"manager\">Manager</option>\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n        \r\n      </form>\r\n    </div>\r\n\r\n    \r\n</template>\r\n\r\n<script>\r\nimport { ref } from 'vue';\r\nimport \"firebase/compat/auth\";\r\nimport \"firebaseui/dist/firebaseui.css\";\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { doc, getDocs, addDoc, getFirestore, collection } from \"firebase/firestore\";\r\n  \r\n\r\n//able to input user details into firebase but there is some issues with validation (e.g. no message prompt)\r\nexport default {\r\n  setup() {\r\n    const name = ref('')\r\n    const email = ref('')\r\n    const password = ref('')\r\n    const confirmPassword = ref('')\r\n    const access = ref('')\r\n\r\n    const register = async () => {\r\n      if (password.value !== confirmPassword.value) {\r\n        alert('Passwords do not match')\r\n        return\r\n      }\r\n\r\n      try {\r\n        const auth = getAuth();\r\n        const db = getFirestore();\r\n        const userCredential = await createUserWithEmailAndPassword(auth, email.value, password.value)\r\n        const user = userCredential.user\r\n\r\n        this.$emit('authenticated')\r\n        this.$toast.success(\"Welcome to DataPower\");\r\n        this.$router.push('/dashboard')\r\n        alert('Registration successful!')\r\n\r\n        //adding info works well (for authentication only)\r\n        await addDoc(collection(db, 'users'), {\r\n          name: name.value,\r\n          email: email.value,\r\n          password: password.value,\r\n          access: access.value,\r\n          uid: user.uid\r\n        })\r\n        //this.$toast.success(\"You have registered successfully!\");\r\n        \r\n        //this is not working\r\n        //this.$router.push('/login')\r\n        \r\n        \r\n      } catch (error) {\r\n        // error do prompt though\r\n        //this.$toast.error(error.message);\r\n        alert('Registration failed. Please try again.')\r\n      }\r\n    }\r\n\r\n    return { name, email, password, confirmPassword, access, register }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.register-form {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n}\r\n\r\n.register-form input {\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: #f3f3f3;\r\n  font-size: 16px;\r\n  width: 300px;\r\n}\r\n\r\n.register-form button {\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  background-color: #0080ff;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  width: 300px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.register-form button:hover {\r\n  background-color: #0066cc;\r\n}\r\n\r\n.register-form .error-message {\r\n  color: red;\r\n  margin-bottom: 20px;\r\n  font-size: 14px;\r\n  text-align: center;\r\n}\r\n</style>\r\n  "],"mappings":";;;AAoCA,SAAAA,GAAA;AACA;AACA;AACA,SAAAC,OAAA,EAAAC,8BAAA;AACA,SAAAC,GAAA,EAAAC,OAAA,EAAAC,MAAA,EAAAC,YAAA,EAAAC,UAAA;;AAGA;AACA;EACAC,KAAA,WAAAA,MAAA;IAAA,IAAAC,KAAA;IACA,IAAAC,IAAA,GAAAV,GAAA;IACA,IAAAW,KAAA,GAAAX,GAAA;IACA,IAAAY,QAAA,GAAAZ,GAAA;IACA,IAAAa,eAAA,GAAAb,GAAA;IACA,IAAAc,MAAA,GAAAd,GAAA;IAEA,IAAAe,QAAA;MAAA,IAAAC,IAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,IAAA,EAAAC,EAAA,EAAAC,cAAA,EAAAC,IAAA;QAAA,OAAAN,mBAAA,GAAAO,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAA,MACAjB,QAAA,CAAAkB,KAAA,KAAAjB,eAAA,CAAAiB,KAAA;gBAAAH,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAE,KAAA;cAAA,OAAAJ,QAAA,CAAAK,MAAA;YAAA;cAAAL,QAAA,CAAAC,IAAA;cAKAP,IAAA,GAAApB,OAAA;cACAqB,EAAA,GAAAhB,YAAA;cAAAqB,QAAA,CAAAE,IAAA;cAAA,OACA3B,8BAAA,CAAAmB,IAAA,EAAAV,KAAA,CAAAmB,KAAA,EAAAlB,QAAA,CAAAkB,KAAA;YAAA;cAAAP,cAAA,GAAAI,QAAA,CAAAM,IAAA;cACAT,IAAA,GAAAD,cAAA,CAAAC,IAAA;cAEAf,KAAA,CAAAyB,KAAA;cACAzB,KAAA,CAAA0B,MAAA,CAAAC,OAAA;cACA3B,KAAA,CAAA4B,OAAA,CAAAC,IAAA;cACAP,KAAA;;cAEA;cAAAJ,QAAA,CAAAE,IAAA;cAAA,OACAxB,MAAA,CAAAE,UAAA,CAAAe,EAAA;gBACAZ,IAAA,EAAAA,IAAA,CAAAoB,KAAA;gBACAnB,KAAA,EAAAA,KAAA,CAAAmB,KAAA;gBACAlB,QAAA,EAAAA,QAAA,CAAAkB,KAAA;gBACAhB,MAAA,EAAAA,MAAA,CAAAgB,KAAA;gBACAS,GAAA,EAAAf,IAAA,CAAAe;cACA;YAAA;cAAAZ,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAa,EAAA,GAAAb,QAAA;cAQA;cACA;cACAI,KAAA;YAAA;YAAA;cAAA,OAAAJ,QAAA,CAAAc,IAAA;UAAA;QAAA,GAAArB,OAAA;MAAA,CAEA;MAAA,gBApCAL,SAAA;QAAA,OAAAC,IAAA,CAAA0B,KAAA,OAAAC,SAAA;MAAA;IAAA,GAoCA;IAEA;MAAAjC,IAAA,EAAAA,IAAA;MAAAC,KAAA,EAAAA,KAAA;MAAAC,QAAA,EAAAA,QAAA;MAAAC,eAAA,EAAAA,eAAA;MAAAC,MAAA,EAAAA,MAAA;MAAAC,QAAA,EAAAA;IAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}